---
- hosts: localhost
  connection: local
  gather_facts: no

  tasks:
  - name: "Deploy prometheus-operator"
    k8s:
      verify_ssl: false
      state: present
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
         name: 'app-monitor-prometheus-operator'
         namespace: '{{ meta.namespace }}'
         labels:
           k8s-app: 'app-monitor-prometheus-operator'
        spec:
         replicas: 1
         selector:
           matchLabels:
             k8s-app: 'app-monitor-prometheus-operator'
         template:
           metadata:
             labels:
               k8s-app: 'app-monitor-prometheus-operator'
           spec:
             containers:
               - name: 'app-monitor-prometheus-operator'
                 args:
                   - '--kubelet-service=kube-system/kubelet'
                   - '--logtostderr=true'
                   - '--config-reloader-image={{ registry }}/openshift3/ose-configmap-reloader:{{ openshift_version }}'
                   - '--prometheus-config-reloader={{ registry }}/openshift3/ose-prometheus-config-reloader:{{ openshift_version }}'
                   - '--prometheus-default-base-image={{ registry }}/openshift3/prometheus'
                   - '--crd-apigroup=app-monitoring.io'
                   - '--disable-auto-user-group'
                 image: '{{ registry }}/openshift3/ose-prometheus-operator:{{ openshift_version }}'
                 imagePullPolicy: Always
                 ports:
                   - containerPort: 8080
                     name: http
                 resources:
                   limits:
                     cpu: 200m
                     memory: 200Mi
                   requests:
                     cpu: 100m
                     memory: 100Mi
                 securityContext:
                   allowPrivilegeEscalation: false
                   readOnlyRootFilesystem: true
             securityContext:
               runAsNonRoot: true
             serviceAccountName: "app-monitoring-operator"

  - name: "Base Installation: Create app-prometheus role"
    k8s:
      verify_ssl: false
      state: present
      definition:
        apiVersion: rbac.authorization.k8s.io/v1beta1
        kind: ClusterRole
        metadata:
          name: '{{ prometheus_clusterrole }}'
        rules:
          - apiGroups:
              - authentication.k8s.io
            attributeRestrictions: null
            resources:
              - tokenreviews
            verbs:
              - create
          - apiGroups:
              - authorization.k8s.io
            attributeRestrictions: null
            resources:
              - subjectaccessreviews
            verbs:
              - create
          - apiGroups: [""]
            resources:
              - nodes
              - services
              - endpoints
              - pods
            verbs: ["get", "list", "watch"]
          - apiGroups: [""]
            resources:
              - configmaps
            verbs: ["get"]
          - nonResourceURLs: ["/metrics"]
            verbs: ["get"]

  - name: "Base Installation: Create clusterrole for grafana"
    k8s:
      verify_ssl: false
      state: present
      definition:
        apiVersion: authorization.openshift.io/v1
        kind: ClusterRole
        metadata:
          name: '{{ grafana_clusterrole }}'
        rules:
          - apiGroups:
              - authentication.k8s.io
            attributeRestrictions: null
            resources:
              - tokenreviews
            verbs:
              - create
          - apiGroups:
              - authorization.k8s.io
            attributeRestrictions: null
            resources:
              - subjectaccessreviews
            verbs:
              - create